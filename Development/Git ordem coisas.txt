### Ordem de Comandos Git

1. **Clone o Repositório:**
   ```sh
   git clone <url>
   ```

2. **Mudar para a Branch de Desenvolvimento:**
   ```sh
   git checkout develop
   ```

3. **Atualizar a Branch:**
   ```sh
   git pull origin dev
   ```

4. **Verificar Status


#### 5. Verificar Status do Git
```sh
git status
```
Isso verifica em qual branch você está e quais arquivos foram modificados.

#### 6. Adicionar Alterações ao Staging
```sh
git add .
```
Adicione todas as alterações feitas.

#### 7. Fazer um Commit com Descrição
```sh
git commit -m "Descrição do que foi feito"
```
Escreva uma mensagem clara e descritiva sobre o que foi alterado.

#### 8. Enviar as Alterações para o Repositório Remoto
```sh
git push origin nome-branch
```
#### 9. Vai no git-hub online e abra o pull request manualmente.
Selecionar sua branch para dev.
Envie o link do pr a ser aprovado para alguém validar alterações.

Aceite as configurações padrão, que geralmente são:
- Branch principal: `main`
- Branch de desenvolvimento: `dev`
- Prefixos para branches de test: `test/`
- Prefixos para branches de tests: `tests/`
- Prefixos para branches de suporte: `refactor/`
- Prefixos para branches de polishs: `polishs/`
- Prefixos para branches de features: `feature/`
- Prefixos para branches de releases: `release/`
- Prefixos para branches de hotfixes: `hotfix/`
- Prefixos para branches de suporte: `support/`

#### Criar uma Nova Feature
```sh
Criar no git-hub online a branch com o nome feature/

#### Finalizar uma Feature
```sh
git push origin feature-branch
```
Pós PR aceito deletar a branch de feature.

### Passo a Passo Completo com Git Flow
1. **Clone o repositório:**
   ```sh
   git clone <url-do-repositorio>
   ```

2. **Mude para a branch de desenvolvimento:**
   ```sh
   git checkout dev
   ```

3. **Atualize a branch local:**
   ```sh
   git pull
   ```

4. **Verifique o status:**
   ```sh
   git status
   ```

5. **Salvar alterações temporariamente (se necessário):**
   ```sh
   git stash
   ```

6. **Adicionar alterações ao staging:**
   ```sh
   git add .
   ```

7. **Fazer um commit:**
   ```sh
   git commit -m "Descrição do que foi feito"
   ```

8. **Enviar alterações para o repositório remoto: ps:(NUNCA FAÇA ISSO, caso seja necessário)**
   ```sh
   git push -u origin dev
   ```
